
 arguments for MangaScrap :

 -a --add [-f 'name of file'] / 'manga name' [manga site (default is manga fox)]
    add manga to database
		also updates the manga index ( html )

 -da --data [-f 'name of file'] / 'manga name'
    download data ( cover + details ) of targeted manga(s)
		also updates the manga index ( html )

 -u --update [-f 'name of file'] / [manga name]
    update database / manga
		will update the index ( html ) of each manga when it finished updating them

 -uf --update-fast [-f 'name of file'] / [manga name]
    only update mangas witch are tagged as "Ongoing" in database
		will update the index ( html ) of each manga when it finished updating them

 -dl --download [-f 'name of file'] 'manga name' [manga site (default is manga fox)]
    add manga and then download

 -redl --redownload 'manga name' [volume] [chapter] [page]
    deletes the volume / chapter(s) / page(s) from the trace databe and then updates the manga

 -l --list [manga name / manga site]
    shows content of database

 -d --delete [-f 'name of file'] / [manga name]
    deletes manga from database ( not the files !!! )
		also updates the manga index ( html )

 -df --delete-files [-f 'name of file'] / [manga name]
    deletes manga from database and also the files
		also updates the manga index ( html )

 -pl --param_list
    lists actual settings

 -ps --param_set 'parameter id' 'value'
    sets the speciefied parameter
    WARNING : when setting the destination folder of mangas, the already downloaded
              pages are NOT moved
        'parameter id' values :
        mp => the path to witch the "manga" directory is created ( string )
        bs => the sleep between 2 page downloads ( seconds )
        fs => the sleep between 2 page download fails ( seconds )
        nb => the number of download fails allowed before putting the page in the todo database ( int )
        es => time between 2 errors - such as a conection loss - ( seconds )
        dd => delete the chapters that are not in the link list - after they where moved to an other
              volume for example - ( true / false )

 -pr --param_reset
    resets the parameters to default, will ask for confirmation

 -c --clear [-f 'name of file'] / [manga name]
    clears the todo database from the manga ( to be used when trying to update an unexisting chapter )

 -ht --html [-f 'name of file'] / [manga name]
    generates the manga index + the chapter index and chapters of the required mangas

 -hti --html-index
    regenerates the manga index only

 -h --help
    displays help


 -f + 'file name' allows you to do multiple mangas at once
 it is used with add, update, download and delete
 if used, no other arguments are required
 in the file, each manga is separated by a line break
 syntax is : manga_name [site]
 the site will be ignored for update and delete

 example :
 black_clover
 crepuscule_yamchi http://mangafox.me/

 Usage exemples :
 ./MangaScrap -a my_super_manga
    adds 'my_super_manga' to the database for future update
 ./MangaScrap -a -f my_manga_list.txt
    adds all mangas of 'my_manga_list.txt' to the database for future update
 ./MangaScrap
    updates all mangas in database
 ./MangaScrap -f file.txt
    updates all mangas in file.txt
 ./MangaScrap -ps mp /home/toto/
    sets the path of the manga directory to the last argument
    WARNING : it does NOT move the already downloaded pages

 Warning !
 The [manga name] is found in the url
 ex : "bleach" => http://mangafox.me/manga/bleach/ => "bleach"
 ex : "black clover" => http://mangafox.me/manga/black_clover/ => "black_clover"
 ex : "crepuscule" => http://mangafox.me/manga/crepuscule_yamchi/ => "crepuscule_yamchi"

 information concerning the display of the download :
 . => downloaded a page
 , => downloaded a page ( multiple of 10 )
 ; => downloaded a page ( pultiple of 50 )
 ? => could not download a page ( 404 not found )
 X => could not download a page ( other error )
